// Code generated by sqlc. DO NOT EDIT.

package bank_account_store

import (
	"fmt"
	"time"

	"github.com/google/uuid"
)

type CryptoCoins string

const (
	CryptoCoinsBITCOIN   CryptoCoins = "BITCOIN"
	CryptoCoinsDODGECOIN CryptoCoins = "DODGE-COIN"
	CryptoCoinsETHEREUM  CryptoCoins = "ETHEREUM"
)

func (e *CryptoCoins) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = CryptoCoins(s)
	case string:
		*e = CryptoCoins(s)
	default:
		return fmt.Errorf("unsupported scan type for CryptoCoins: %T", src)
	}
	return nil
}

type Account struct {
	RowID     int64     `json:"rowID"`
	UserID    uuid.UUID `json:"userID"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
}

type TransactionRecord struct {
	RowID        int64       `json:"rowID"`
	FromUserID   uuid.UUID   `json:"fromUserID"`
	FromWalletID uuid.UUID   `json:"fromWalletID"`
	ToUserID     uuid.UUID   `json:"toUserID"`
	ToWalletID   uuid.UUID   `json:"toWalletID"`
	Coin         CryptoCoins `json:"coin"`
	Amount       int64       `json:"amount"`
	CreatedAt    time.Time   `json:"createdAt"`
}

type Wallet struct {
	RowID     int64       `json:"rowID"`
	WalletID  uuid.UUID   `json:"walletID"`
	UserID    uuid.UUID   `json:"userID"`
	Coin      CryptoCoins `json:"coin"`
	Balance   int64       `json:"balance"`
	CreatedAt time.Time   `json:"createdAt"`
	UpdatedAt time.Time   `json:"updatedAt"`
}
